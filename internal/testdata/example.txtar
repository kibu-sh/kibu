parse $WORK/pkg/auth

-- go.mod --
module github.com/example/module

-- pkg/auth/z_auth.go --
package auth

// service handles authentication
//kibu:service
type service struct {}

-- pkg/auth/auth_verify.go --
package auth

import ("context")

type VerifyRequest struct {}
type VerifyResponse struct {}

// Send sends an authentication request
//   Here's some other comment related stuff
//kibu:endpoint path=/verify method=GET
func (s *service) Verify(ctx context.Context, req VerifyRequest) (res VerifyResponse, err error) {
	return
}

-- pkg/auth/auth_worker.go --
package auth

import ("context")

// service handles authentication
//kibu:worker workflow
type workflows struct {}

// Verify sends an authentication request
//   Here's some other comment related stuff
//kibu:workflow
func (*workflows) Verify(ctx context.Context, req VerifyRequest) (res VerifyResponse, err error) {
	return
}

// TODO: add validation run that prevents activities and workflows from being in the same struct

// service handles authentication
//kibu:worker activity
type activities struct {}

// Verify sends an authentication request
//   Here's some other comment related stuff
//kibu:activity
func (activities) Verify(ctx context.Context, req VerifyRequest) (res VerifyResponse, err error) {
	return
}

//kibu:provider
func initService() (*service, error) {
	return &service{}, nil
}

//kibu:provider
func initWorkflows() (*workflows, error) {
	return &workflows{}, nil
}

//kibu:provider
func initActivities() (*activities, error) {
	return &activities{}, nil
}