kibuwire -cwd $WORK/src/backend/ -out $WORK/src/backend/gen/ ./...
cmp $WORK/exp/billingv1.wire.gen.go $WORK/src/backend/billingv1/billingv1.wire.gen.go
cmp $WORK/exp/kibuwire.gen.go $WORK/src/backend/gen/kibuwire/kibuwire.gen.go

-- src/go.mod --
module github.com/example/module

-- src/backend/billingv1/billingv1.gen.go --
package billingv1

//kibu:provider import=github.com/kibu-sh/kibu/pkg/transport/httpx group=HandlerFactory
type ServiceController struct {}
func (svc *ServiceController) Build() []*httpx.Handler {
	return []*httpx.Handler{}
}

//kibu:provider
func NewServiceController() ServiceController {
	return ServiceController{}
}

-- exp/billingv1.wire.gen.go --
// Code generated by kibu. DO NOT EDIT.

package billingv1

import wire "github.com/google/wire"

var WireSet = wire.NewSet(
	wire.Struct(new(ServiceController), "*"),
	NewServiceController,
)
-- exp/kibuwire.gen.go --
// Code generated by kibu. DO NOT EDIT.

package kibuwire

import (
	billingv1 "github.com/example/module/backend/billingv1"
	wire "github.com/google/wire"
	httpx "github.com/kibu-sh/kibu/pkg/transport/httpx"
)

type HttpxHandlerFactoryGroup struct {
	Billingv1ServiceController *billingv1.ServiceController
}

func HttpxHandlerFactoryProvider(group *HttpxHandlerFactoryGroup) []httpx.HandlerFactory {
	return []httpx.HandlerFactory{
		group.Billingv1ServiceController,
	}
}

var GroupSet = wire.NewSet(
	wire.Struct(new(HttpxHandlerFactoryGroup), "*"),
	HttpxHandlerFactoryProvider,
)
var SuperSet = wire.NewSet(
	GroupSet,
	billingv1.WireSet,
)