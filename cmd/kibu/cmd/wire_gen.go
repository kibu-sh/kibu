// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package cmd

import (
	"github.com/kibu-sh/kibu/pkg/appcontext"
)

import (
	_ "github.com/golang-migrate/migrate/v4/database/postgres"
	_ "github.com/golang-migrate/migrate/v4/source/github"
)

// Injectors from wire.go:

func InitCLI() (RootCmd, error) {
	context := appcontext.Context()
	cmdConfigLoaderFunc := provideConfigLoader()
	cmdStoreLoaderFunc := provideStoreLoader(context, cmdConfigLoaderFunc)
	newConfigGetCmdParams := NewConfigGetCmdParams{
		StoreLoader: cmdStoreLoaderFunc,
	}
	configGetCmd := NewConfigGetCmd(newConfigGetCmdParams)
	cmdStoreSettingsLoaderFunc := provideStoreSettingsLoader(cmdConfigLoaderFunc)
	newConfigSetCmdParams := NewConfigSetCmdParams{
		storeLoader:    cmdStoreLoaderFunc,
		settingsLoader: cmdStoreSettingsLoaderFunc,
	}
	configSetCmd := NewConfigSetCmd(newConfigSetCmdParams)
	cmdFileEditorFunc := provideFileEditor()
	newConfigEditCmdParams := NewConfigEditCmdParams{
		loadStore:         cmdStoreLoaderFunc,
		loadFileEditor:    cmdFileEditorFunc,
		loadStoreSettings: cmdStoreSettingsLoaderFunc,
	}
	configEditCmd := NewConfigEditCmd(newConfigEditCmdParams)
	newConfigSyncCmdParams := NewConfigSyncCmdParams{
		loadStore: cmdStoreLoaderFunc,
	}
	configSyncCmd := NewConfigSyncCmd(newConfigSyncCmdParams)
	logger := NewLogger()
	newConfigCopyCmdParams := NewConfigCopyCmdParams{
		Logger:       logger,
		configLoader: cmdConfigLoaderFunc,
	}
	configCopyCmd := NewConfigCopyCmd(newConfigCopyCmdParams)
	configCmdParams := ConfigCmdParams{
		ConfigGetCmd:  configGetCmd,
		ConfigSetCmd:  configSetCmd,
		ConfigEditCmd: configEditCmd,
		ConfigSyncCmd: configSyncCmd,
		ConfigCopyCmd: configCopyCmd,
	}
	configCmd := NewConfigCmd(configCmdParams)
	buildCmd := NewBuildCmd()
	newMigrateUpCmdParams := NewMigrateUpCmdParams{}
	migrateUpCmd := NewMigrateUpCmd(newMigrateUpCmdParams)
	newMigrateDownCmdParams := NewMigrateDownCmdParams{}
	migrateDownCmd := NewMigrateDownCmd(newMigrateDownCmdParams)
	newMigrateCmdParams := NewMigrateCmdParams{
		MigrateUpCmd:   migrateUpCmd,
		MigrateDownCmd: migrateDownCmd,
	}
	migrateCmd := NewMigrateCmd(newMigrateCmdParams)
	newDevUpCmdParams := NewDevUpCmdParams{}
	devUpCmd := NewDevUpCmd(newDevUpCmdParams)
	devCmdParams := DevCmdParams{
		DevUpCmd: devUpCmd,
	}
	devCmd := NewDevCmd(devCmdParams)
	rootCmdParams := RootCmdParams{
		ConfigCmd:  configCmd,
		BuildCmd:   buildCmd,
		MigrateCmd: migrateCmd,
		DevCmd:     devCmd,
	}
	rootCmd := NewRootCmd(rootCmdParams)
	return rootCmd, nil
}
